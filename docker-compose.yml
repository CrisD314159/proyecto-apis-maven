version: '3.8'
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  consul:
    image: consul:1.15.4
    ports:
      - "8500:8500" # Interfaz web de Consul
      - "8600:8600/udp" # DNS de Consul
    volumes:
      - ./config/consul/config:/etc/consul.d # Monta el directorio de configuraci√≥n
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 -config-dir=/etc/con

  app:
    image: quarkus-example-app:latest
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    environment:
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/mydatabase
      QUARKUS_DATASOURCE_USERNAME: myuser
      QUARKUS_DATASOURCE_PASSWORD: mypassword
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - elk

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.0
    volumes:
      - ./pipelines/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "4560:4560"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - elk

volumes:
  postgres_data:

networks:
  elk:
    driver: bridge